<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.project.mapper.ModuleMapper">

    <select id="existModule" resultType="java.lang.Integer">
        select count(1) from module_creation
        where module_name = #{module_name}
    </select>
    <insert id="createModulerequest">
        insert into module_creation(module_name)
        values(#{module_name})
    </insert>
    <update id="updateModulerequest">
        update module_creation
        set request_count=request_count+1 where module_name = #{module_name}
    </update>

    <select id="getRequests" resultType="java.util.HashMap">
        select * from module_creation
    </select>
    <insert id="insertModule">
        insert into module(module_name) values (#{module_name})
    </insert>
    <delete id="deleteRequest">
        delete from module_creation where module_name = #{module_name}
    </delete>

    <select id="getModule" resultType="com.example.project.entity.Module">
        select * from module
        where module_name = #{module_name}
    </select>

    <select id="getPosts" resultType="com.example.project.entity.Post">
        select * from post
        where module_name = #{module_name}
        <if test="module_name == 'life'">
            or module_name is null
        </if>
        order by if_top desc, post_createtime desc
    </select>

    <select id="getTopc" resultType="java.lang.Integer">
        select count(1) from post
        where module_name =#{module_name}
        <if test="module_name == null">
        or module_name is null
        </if>
        and if_top = 1
    </select>

    <select id="ifTop" resultType="java.lang.Integer">
        select if_top from post
        where post_id =#{post_id}
    </select>

    <update id="setTop">
        update post set if_top = 1-if_top
        where post_id=#{post_id}
    </update>

    <select id="getModules" resultType="com.example.project.entity.Module">
        select * from module
        where module_name != 'life'
        order by module_name asc
    </select>

    <select id="getAdmins" resultType="java.lang.String">
        select username from user_info
        where  module_admin = #{module_name}
        order by username asc
    </select>

    <select id="searchModule" resultType="com.example.project.entity.Module">
        select * from module
        where module_name like "%"#{key}"%"
        and module_name != 'life'
        order by module_name asc
    </select>

    <update id="setAdmin">
        update user_info set module_admin = #{module_name}
        where username = #{username}
    </update>

    <update id="deleteAdmin">
        update user_info set module_admin = null
        where username = #{username}
    </update>

    <update id="editIntro">
        update module set module_intro = #{new_intro}
        where module_name = #{module_name}
    </update>

    <select id="gethotmodules" resultType="java.util.HashMap">
        select module.module_name,count(1)
        from module INNER JOIN post
        on module.module_name = post.module_name
        GROUP BY (module.module_name)
        order by count(1) desc limit 0,#{module_count}
    </select>

    <select id="postlikecount" resultType="java.util.HashMap">
        select post.post_id,count(1)
        from post INNER JOIN post_like
        on post.post_id = post_like.post_id
        where post.module_name = #{module_name}
        <if test="module_name == 'life'">
            or module_name is null
        </if>
        and post_like.like_time >= DATE_ADD(UTC_TIMESTAMP,INTERVAL -1 DAY)
        GROUP BY (post.post_id)
        order by post.post_id asc
    </select>

    <select id="postcommentcount" resultType="java.util.HashMap">
        select post.post_id,count(1)
        from post INNER JOIN post_comment
        on post.post_id = post_comment.post_id
        where post.module_name = #{module_name}
        <if test="module_name == 'life'">
            or module_name is null
        </if>
        and post_comment.comment_time >= DATE_ADD(UTC_TIMESTAMP,INTERVAL -1 DAY)
        GROUP BY (post.post_id)
        order by post.post_id asc
    </select>

    <select id="commentreplycount" resultType="java.lang.Integer">
        select count(1)
        from post_comment INNER JOIN comment_reply
        on post_comment.comment_id = comment_reply.comment_id
        where post_comment.post_id = #{post_id}
        and comment_reply.creply_time >= DATE_ADD(UTC_TIMESTAMP,INTERVAL -1 DAY)
    </select>
</mapper>